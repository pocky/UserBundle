<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="black_user.infrastructure.cqrs.handler.connect.class">Black\Component\User\Infrastructure\CQRS\Handler\ConnectUserHandler</parameter>
        <parameter key="black_user.infrastructure.cqrs.handler.active.class">Black\Component\User\Infrastructure\CQRS\Handler\ActiveUserHandler</parameter>
        <parameter key="black_user.infrastructure.cqrs.handler.deactive.class">Black\Component\User\Infrastructure\CQRS\Handler\DeactiveUserHandler</parameter>
        <parameter key="black_user.infrastructure.cqrs.handler.lock.class">Black\Component\User\Infrastructure\CQRS\Handler\LockUserHandler</parameter>
        <parameter key="black_user.infrastructure.cqrs.handler.unlock.class">Black\Component\User\Infrastructure\CQRS\Handler\UnlockUserHandler</parameter>
        <parameter key="black_user.infrastructure.cqrs.handler.create.class">Black\Component\User\Infrastructure\CQRS\Handler\CreateUserHandler</parameter>
        <parameter key="black_user.infrastructure.cqrs.handler.update_account.class">Black\Component\User\Infrastructure\CQRS\Handler\UpdateAccountHandler</parameter>
        <parameter key="black_user.infrastructure.cqrs.handler.update_password.class">Black\Component\User\Infrastructure\CQRS\Handler\UpdatePasswordHandler</parameter>
        <parameter key="black_user.infrastructure.cqrs.handler.register.class">Black\Component\User\Infrastructure\CQRS\Handler\RegisterUserHandler</parameter>
        <parameter key="black_user.infrastructure.cqrs.handler.remove.class">Black\Component\User\Infrastructure\CQRS\Handler\RemoveUserHandler</parameter>
    </parameters>

    <services>

        <service id="black_user.infrastructure.cqrs.handler.connect" class="%black_user.infrastructure.cqrs.handler.connect.class%">
            <argument type="service" id="black_user.persistence.user_write" />
            <argument type="service" id="black_user.infrastructure.service.status" />
            <argument type="service" id="event_dispatcher" />
        </service>

        <service id="black_user.infrastructure.cqrs.handler.active" class="%black_user.infrastructure.cqrs.handler.active.class%">
            <argument type="service" id="black_user.persistence.user_write" />
            <argument type="service" id="black_user.infrastructure.service.status" />
            <argument type="service" id="event_dispatcher" />
        </service>

        <service id="black_user.infrastructure.cqrs.handler.deactive" class="%black_user.infrastructure.cqrs.handler.deactive.class%">
            <argument type="service" id="black_user.persistence.user_write" />
            <argument type="service" id="black_user.infrastructure.service.status" />
            <argument type="service" id="event_dispatcher" />
        </service>

        <service id="black_user.infrastructure.cqrs.handler.lock" class="%black_user.infrastructure.cqrs.handler.lock.class%">
            <argument type="service" id="black_user.persistence.user_write" />
            <argument type="service" id="black_user.infrastructure.service.status" />
            <argument type="service" id="event_dispatcher" />
        </service>

        <service id="black_user.infrastructure.cqrs.handler.unlock" class="%black_user.infrastructure.cqrs.handler.unlock.class%">
            <argument type="service" id="black_user.persistence.user_write" />
            <argument type="service" id="black_user.infrastructure.service.status" />
            <argument type="service" id="event_dispatcher" />
        </service>

        <service id="black_user.infrastructure.cqrs.handler.create" class="%black_user.infrastructure.cqrs.handler.create.class%">
            <argument type="service" id="black_user.persistence.user_write" />
            <argument type="service" id="black_user.infrastructure.service.register" />
            <argument type="service" id="event_dispatcher" />
        </service>

        <service id="black_user.infrastructure.cqrs.handler.update_account" class="%black_user.infrastructure.cqrs.handler.update_account.class%">
            <argument type="service" id="black_user.persistence.user_write" />
            <argument type="service" id="black_user.infrastructure.service.write" />
            <argument type="service" id="event_dispatcher" />
        </service>

        <service id="black_user.infrastructure.cqrs.handler.update_password" class="%black_user.infrastructure.cqrs.handler.update_password.class%">
            <argument type="service" id="black_user.persistence.user_write" />
            <argument type="service" id="black_user.infrastructure.service.write" />
            <argument type="service" id="event_dispatcher" />
        </service>

        <service id="black_user.infrastructure.cqrs.handler.register" class="%black_user.infrastructure.cqrs.handler.register.class%">
            <argument type="service" id="black_user.persistence.user_write" />
            <argument type="service" id="black_user.infrastructure.service.register" />
        </service>

        <service id="black_user.infrastructure.cqrs.handler.remove" class="%black_user.infrastructure.cqrs.handler.remove.class%">
            <argument type="service" id="black_user.persistence.user_read" />
            <argument type="service" id="black_user.persistence.user_write" />
            <argument type="service" id="event_dispatcher" />
        </service>

    </services>
</container>
